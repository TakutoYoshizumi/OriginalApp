

//Profile
//データベース
create database originalApp default character set utf8;

//ユーザーテーブル
create table users(
    id int primary key auto_increment, 
    name varchar(50) not null,
    account varchar(50) not null unique,
    password varchar(50) not null,
    created_at timestamp not null default CURRENT_TIMESTAMP,
    update_at timestamp not null default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
//プロフィール
create table profiles(
    id int auto_increment primary key,
    user_id int not null,
    age int not null,
    gender varchar(50) not null,
    job varchar(50) not null,
    country varchar(50) not null,
    introduction varchar(255) not null,
    image varchar(255) ,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
);

//イベントテーブル
create table events(
    id int auto_increment primary key,
    user_id int not null,
    name varchar(50) not null,
    content varchar(255) not null,
    place varchar(50) not null,
    day varchar(50) not null,
    time varchar(50) not null,
    participants int not null,
    type varchar(50) not null,
    image varchar(255) ,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
);

//イベント参加テーブル
create table participants(
    id int auto_increment primary key,
    user_id int not null,
    event_id int not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(event_id) references events(id)
    on delete cascade
    on update cascade
);

//いいねテーブル
create table favorites(
    id int auto_increment primary key,
    user_id int not null,
    event_id int not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(event_id) references events(id)
    on delete cascade
    on update cascade
);

//カテゴリーテーブル
create table categories(
    id int auto_increment primary key,
    type varchar(100) not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );


inset into categories(type) value('アウトドア');

//テーブル
create table event_category_relations(
    id int auto_increment primary key,
    event_id int not null,
    category_id int not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(event_id) references events(id)
    on delete cascade
    on update cascade,
    foreign key(category_id) references categories(id)
    on delete cascade
    on update cascade
);

//コメント投稿テーブル
create table comments(
    id int auto_increment primary key,
    user_id int not null,
    event_id int not null,
    content varchar(255) not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(user_id) references users(id)
    on delete cascade
    on update cascade,
    foreign key(event_id) references events(id)
    on delete cascade
    on update cascade
);

//メッセージテーブル
create table messages(
    id int auto_increment primary key,
    send_user_id int not null,
    receive_user_id int not null,
    message_content varchar(255) not null,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    foreign key(send_user_id) references users(id)
    on delete cascade
    on update cascade
);

//メッセージリレーションテーブル
create table message_relations(
    id int primary key auto_increment, 
    send_user_id int not null,
    receive_user_id int not null,
    message_count int default 0,
    created_at timestamp default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
